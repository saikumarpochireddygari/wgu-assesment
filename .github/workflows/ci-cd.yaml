name: MLOps Production Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  deploy-databricks-jobs:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Databricks CLI Setup
        uses: databricks/setup-cli@main

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install --only-binary=pyyaml -r requirements.txt

      - name: Configure Databricks CLI
        run: |
          databricks configure --host ${{ secrets.DATABRICKS_HOST }} \
                               --token ${{ secrets.DATABRICKS_TOKEN }} \
                               --profile DEFAULT --quiet
      - name: Validate Databricks credentials
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          set -euxo pipefail
          chmod +x ./utilities_bash_scripts/validate_user.sh
          chmod +x ./utilities_bash_scripts/validate_databricks_token.sh
          ./utilities_bash_scripts/validate_user.sh
          ./utilities_bash_scripts/validate_databricks_token.sh

      - name: Determine environment
        id: envselect
        run: |
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            echo "env_name=prod" >> $GITHUB_OUTPUT
          else
            echo "env_name=unknown" >> $GITHUB_OUTPUT
          fi

      - name: Deploy Jobs
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          python -m cli_tool.main deploy --env ${{ steps.envselect.outputs.env_name }}
