name: ML Production Workflow

on:
  push:
    branches: [ "main" ]

jobs:
  deploy-databricks-jobs:
    runs-on: ubuntu-latest

    steps:
      - name: Checking out the Current Repo
        uses: actions/checkout@v3

      - name: Setting up Databricks CLI
        uses: databricks/setup-cli@main

      - name: Setting up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Installing Python Dependencies
        run: |
          pip install --upgrade pip
          pip install --only-binary=pyyaml -r requirements.txt
      
      - name: Run code quality checks
        run: |
          set -euxo pipefail
          black --check cli_tool/
          flake8 cli_tool/ --max-line-length 150

      - name: Checking for Databricks CLI version
        run: |
          databricks --version

      - name: Configuring Databricks CLI
        run: |
          mkdir -p ~/.databrickscfg
          echo "[DEFAULT]" > ~/.databrickscfg/config
          echo "host = ${{ secrets.DATABRICKS_HOST }}" >> ~/.databrickscfg/config
          echo "token = ${{ secrets.DATABRICKS_TOKEN }}" >> ~/.databrickscfg/config

      - name: Validating User level Permissions For Databricks 
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          set -euxo pipefail
          chmod +x ./utilities_bash_scripts/validate_user.sh
          chmod +x ./utilities_bash_scripts/validate_databricks_token.sh
          ./utilities_bash_scripts/validate_user.sh
          ./utilities_bash_scripts/validate_databricks_token.sh
       
      - name: Run Integration Tests
        run: |
          pytest tests/

      - name: Determine environment
        id: envselect
        run: |
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            echo "env_name=prod" >> $GITHUB_OUTPUT
          else
            echo "env_name=unknown" >> $GITHUB_OUTPUT
          fi

      - name: Deploying Jobs to Databricks
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          python -m cli_tool.main deploy --env ${{ steps.envselect.outputs.env_name }}